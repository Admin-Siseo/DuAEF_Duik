/*
DuScriptUILib
Library with ScriptUI tools.
Copyright (c) 2017 Nicolas Dufresne, Rainbox Productions
https://rainboxprod.coop

_Contributors:_
Nicolas Dufresne - Lead developer

This file is part of DuAEF.

DuAEF is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

DuAEF is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with DuAEF. If not, see <http://www.gnu.org/licenses/>.
*/

/**
* ScriptUI tools
* @namespace
* @memberof DuAEF
*/
DuAEF.DuScriptUI = {};

//initilization
(function ()
{
	/**
	* The default alignment of children of containers with "column" orientation
	* @memberof DuAEF.DuScriptUI
	* @type {String[]}
	* @default ["fill","top"]
	*/
	DuAEF.DuScriptUI.defaultColumnAlignment = ["fill","top"];
	/**
	* The default alignment of children of containers with "row" orientation
	* @memberof DuAEF.DuScriptUI
	* @type {String[]}
	* @default ["left","center"]
	*/
	DuAEF.DuScriptUI.defaultRowAlignment = ["left","center"];
	/**
	* The default alignment of children of containers with "stack" orientation
	* @memberof DuAEF.DuScriptUI
	* @type {String[]}
	* @default ["fill","top"]
	*/
	DuAEF.DuScriptUI.defaultStackAlignment = ["fill","top"];
	/**
	* The default spacing of containers
	* @memberof DuAEF.DuScriptUI
	* @type {int}
	* @default 2
	*/
	DuAEF.DuScriptUI.defaultSpacing = 2;
	/**
	* The default mqrgins of containers
	* @memberof DuAEF.DuScriptUI
	* @type {int}
	* @default 2
	*/
	DuAEF.DuScriptUI.defaultMargins = 2;
})();

/**
 * Changes the color of the text of a ScriptUI Object
 * @memberof DuAEF.DuScriptUI
 * @param {ScriptUI}		text	- The ScriptUI Object
 * @param {Array}				color	- The new color [R,V,B,A] Array
 */
DuAEF.DuScriptUI.setTextColor = function (text,color)
{
	if (!text) throw "You must provide a ScriptUI Control to change the color of the text";
	var g = text.graphics;
	var textPen = g.newPen(g.PenType.SOLID_COLOR,color,1);
	g.foregroundColor = textPen;
}

/**
 * Creates the main panel of a script
 * @memberof DuAEF.DuScriptUI
 * @param {Panel|null}		container	- The container ('this' in the root of the calling script), either a Panel (when launched from the 'Window' menu) or null (when launched from 'file/scripts/run...')
 * @return {Panel|Window}	The panel created, either a ScriptUI Panel or a ScriptUI Window
 */
DuAEF.DuScriptUI.createUI = function (container, scriptName)
{
	if (!scriptName) scriptName = '';

	var  myPal = null;
	container instanceof Panel ? myPal = container : myPal = new Window('palette',scriptName,undefined, {resizeable:true});

	if (myPal == null) throw "Failed to create User Interface.";

	// Margins and alignment
	myPal.margins = DuAEF.DuScriptUI.defaultMargins;
	myPal.spacing = DuAEF.DuScriptUI.defaultSpacing;
	myPal.alignChildren = DuAEF.DuScriptUI.defaultColumnAlignment;
	myPal.orientation = "column";

	return myPal;
}

/**
 * Resizes and shows the main panel of a script
 * @memberof DuAEF.DuScriptUI
 * @param {Panel|Window}		ui	- The UI created by Duik.ui.createUI
 */
DuAEF.DuScriptUI.showUI = function (ui)
{
	ui.layout.layout(true);
	ui.layout.resize();
	ui.onResizing = ui.onResize = function () {this.layout.resize();}

	// If it's a Window, it needs to be shown
	if (ui instanceof Window) {
		//ui.center();
		ui.show();
	}
}

/**
 * Adds a group in a container, using  DuAEF.DuScriptUI default alignments, and DuAEF.DuScriptUI.defaultSpacing. Margins are set to 0.
 * @memberof DuAEF.DuScriptUI
 * @param {Panel|Window|Group}		container	- Where to create the group
 * @param {string}					[orientation] - The orientation to use. One of "column", "row" or "stack". By default, "column" if added in a row, "row" if added in a column.
 * @return {Group}	The group created
 */
DuAEF.DuScriptUI.addGroup = function (container,orientation)
{
	var group = container.add("group");
	group.spacing = 2;
	group.margins = 0;
	if (orientation !== undefined) group.orientation = orientation;
	if(group.orientation === "row")
	{
		group.alignChildren = DuAEF.DuScriptUI.defaultRowAlignment;
	}
	else if (group.orientation === "column")
	{
		group.alignChildren = DuAEF.DuScriptUI.defaultColumnAlignment;
	}
	else
	{
		group.alignChildren = DuAEF.DuScriptUI.defaultStackAlignment;
	}

	return group;
}
