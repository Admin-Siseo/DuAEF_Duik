/*
	DuRendererLib
  Library to manage the After Effects Renderer/RenderQueue
	Copyright (c) 2017 Nicolas Dufresne, Rainbox Productions
	https://rainboxprod.coop

	_Contributors:_
		Nicolas Dufresne - Lead developer

	This file is part of DuAEF.

	DuAEF is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	DuAEF is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with DuAEF. If not, see <http://www.gnu.org/licenses/>.
*/

#include DuProcessLib.jsxinc

/**
 * Constructs a new DuRenderer instance
 * @class DuRenderer
 * @classdesc A class used to easily manage After Effects Renderer/RenderQueue
 * @property {string}             defaultOutputTemplate       - The default output module template name to use when adding comp to the queue. Empty string to let default AE OM defaultOutputTemplate. Default: ""
 * @property {PostRenderAction}   defaultPostRenderAction     - The default PostRenderAction. Default: PostRenderAction.NONE
 * @property {Array}              items                       - The DuRendererItems in the queue
 */
function DuRenderer(defaultOutputTemplate,defaultPostRenderAction)
{
  if (defaultOutputTemplate === undefined) defaultOutputTemplate = '';
  this.defaultOutputTemplate = defaultOutputTemplate;
  if (defaultPostRenderAction === undefined) defaultPostRenderAction = PostRenderAction.NONE;;
  this.defaultPostRenderAction = defaultPostRenderAction;

  this.items = [];

  this.rqItemsEnabled = [];
}

/**
 * Adds a comp to the render queue
 * @memberof DuRenderer
 * @param {CompItem}          comp              - The Composition to add
 * @param {string}            outputTemplate    - The output module template, Default: Durenderer.defaultOutputTemplate
 * @param {PostRenderAction}  postRenderAction  - The PostRenderAction, Default: DuRenderer.defaultPostRenderAction
 */
DuRenderer.prototype.addComp = function(comp,outputTemplate,postRenderAction)
{
  if (outputTemplate === undefined) outputTemplate = this.defaultOutputTemplate;
  if (postRenderAction === undefined) postRenderAction = this.defaultPostRenderAction;
  var item = new DuRendererItem(comp,outputTemplate,postRenderAction);
  this.items.push(item);
}

/**
 * Renders a comp
 * @memberof DuRenderer
 * @param {CompItem}          comp              - The Composition to render
 * @param {string}            outputPath        - The output file path
 * @param {string}            outputTemplate    - The output module template, Default: Durenderer.defaultOutputTemplate
 * @param {PostRenderAction}  postRenderAction  - The PostRenderAction, Default: DuRenderer.defaultPostRenderAction
 */
DuRenderer.prototype.renderComp = function(comp,outputPath,outputTemplate,postRenderAction)
{
  if (outputTemplate === undefined) outputTemplate = this.defaultOutputTemplate;
  if (postRenderAction === undefined) postRenderAction = this.defaultPostRenderAction;

  //TODO option to use aerender.exe

  this.disableRqItems();
  //add comp to render queue
  var rqItem = app.project.renderQueue.items.add(comp);
  var outputModule = rqItem.outputModule(1);
  //set output format
  outputModule.applyTemplate(outputTemplate);
  //set output file
  outputModule.file = new File(outputPath);
  //set post render action
  outputModule.postRenderAction = postRenderAction;
  //launch
  app.project.renderQueue.render();

  //remove item after render
  rqItem.remove();

  this.enableRqItems();
}

/**
 * Disables all previously added Items in the AE renderQueue
 */
DuRenderer.prototype.disableRqItems = function()
{
  for (var i = 1 ; i <= app.project.renderQueue.numItems ; i++)
  {
    var item = app.project.renderQueue.items[i];
    if (item.render) this.rqItemsEnabled.push(i);
    item.render = false;
  }
}

/**
 * Enables all previously added Items in the AE renderQueue
 */
DuRenderer.prototype.enableRqItems = function ()
{
  //re-enable render queue
  for (var i = 0 ; i < this.rqItemsEnabled ; i++)
  {
    var item = app.project.renderQueue.items[this.rqItemsEnabled[i]];
    item.render = true;
  }
}

/**
 * Constructs a new item to render
 * @class DuRendererItem
 * @classdesc An item in the Durenderer queue
 */
function DuRendererItem(comp,outputTemplate,postRenderAction)
{
  this.comp = comp;
  this.outputTemplate = outputTemplate;
  this.postRenderAction = postRenderAction;
}
